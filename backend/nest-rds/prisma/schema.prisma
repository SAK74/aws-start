generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cart {
  id         String      @id @default(uuid()) @db.Uuid
  user_id    String      @unique
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  status     Card_Status @default(OPEN)
  items      Cart_Item[]
  order      Order[]
  User       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum Card_Status {
  OPEN
  ORDERED
}

model Cart_Item {
  product_id String  @unique @db.Uuid
  cart_id    String  @db.Uuid
  count      Int
  cart       Cart    @relation(fields: [cart_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])

  Order    Order?  @relation(fields: [order_id], references: [id])
  order_id String? @db.Uuid

  @@id([cart_id])
}

model Product {
  id          String     @id @default(uuid()) @db.Uuid
  title       String
  description String
  price       Int
  cart        Cart_Item?
}

model Order {
  userId   String        @unique
  cartId   String        @unique @db.Uuid
  cart     Cart          @relation(fields: [cartId], references: [id])
  items    Cart_Item[]
  payment  Json
  delivery Json
  comments String        @db.Text
  status   Order_Status?
  total    Float
  User     User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  id String @id @default(uuid()) @db.Uuid
}

enum Order_Status {
  ORDERED
  IN_PROGRESS
  DELIVERED
}

model User {
  id       String  @id
  name     String  @unique
  email    String? @unique
  password String  @unique
  cart     Cart[]
  order    Order[]
}
